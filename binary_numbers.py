# print(bin(88))
# #'0b1011000'
# print(int('0b1011000', 2))
# #88


# a=int('01100000', 2)
# b=int('00100110', 2)
# print(bin(a & b))
# #'0b100000'
# print(bin(a | b))
# #'0b1100110'
# print(bin(a ^ b))
# #'0b1000110'




# # Prints out a few binary numbers.
# print( int('00', 2))
# print( int('01', 2))
# print( int('10', 2))
# print( int('11', 2))

# # # Prints out a few binary numbers.
# # print int('00000010', 2)   # outputs 2
# # print int('00000011', 2)   # outputs 3
# # print int('00010001', 2)   # outputs 17
# # print int('11111111', 2)   # outputs 255
# print('#######################')
# num = input("enter binary: ")
# print(int(num, 2))
# bi = input("enter decimal: ")
# print(bin(int(bi)))



digit = []
digit.append(int('000000000000000', 2))
digit.append(int('000000000000000', 2))
digit.append(int('000000000000000', 2)) #
digit.append(int('000111111111000', 2))
digit.append(int('000000000001000', 2))
digit.append(int('000000000001000', 2))
digit.append(int('000000000010000', 2))
digit.append(int('000000000100000', 2))
digit.append(int('000000001000000', 2))
digit.append(int('000000010000000', 2))
digit.append(int('000000100000000', 2))
digit.append(int('000001000000000', 2))
digit.append(int('000001000000000', 2))
digit.append(int('000001000000000', 2))
digit.append(int('000001000000000', 2))
digit.append(int('000001000000000', 2))
digit.append(int('000000000000000', 2))
digit.append(int('000000000000000', 2))
digit.append(int('000000000000000', 2))
digit.append(int('000000000000000', 2))

for i in range(len(digit)):
    print(i, bin(digit[i]))
    print(i, int(digit[i]))



# ////// 7
# // [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
# // [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
# // [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
# // [0,0,0,1,1,1,1,1,1,1,1,1,0,0,0]
# // [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0]
# // [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0]
# // [0,0,0,0,0,0,0,0,0,0,1,0,0,0,0]
# // [0,0,0,0,0,0,0,0,0,1,0,0,0,0,0]
# // [0,0,0,0,0,0,0,0,1,0,0,0,0,0,0]
# // [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0]
# // [0,0,0,0,0,0,1,0,0,0,0,0,0,0,0]
# // [0,0,0,0,0,1,0,0,0,0,0,0,0,0,0]
# // [0,0,0,0,0,1,0,0,0,0,0,0,0,0,0]
# // [0,0,0,0,0,1,0,0,0,0,0,0,0,0,0]
# // [0,0,0,0,0,1,0,0,0,0,0,0,0,0,0]
# // [0,0,0,0,0,1,0,0,0,0,0,0,0,0,0]
# // [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
# // [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
# // [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
# // [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
# // [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]




# //var n = 3<<14;
# //console.log(n)
# /*
# 1 1
# 2 2
# 3 4
# 4 8
# 5 16
# 6 32
# 7 64
# 8 128
# 9 256
# 10 512
# 11 1024
# 12 2048
# 13 4096
# 14 8192
# 15 16384
# */
# //
# // var a = 1;
# // var i = 1;
# // console.log(i +": "+ a);
# // function recursive_bit(arg) {
# // //a = a + arg;
# //   a += arg;
# //   i++;
# //   console.log(i +": "+ a);
# //   if (i < 20){
# //      recursive_bit(a)
# //   }
# //
# // }
# //  recursive_bit(a)
# //
